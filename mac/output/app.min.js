"use strict";function asyncGeneratorStep(e,t,n,r,c,o,a){try{var l=e[o](a),i=l.value}catch(e){return void n(e)}l.done?t(i):Promise.resolve(i).then(r,c)}function _asyncToGenerator(l){return function(){var e=this,a=arguments;return new Promise(function(t,n){var r=l.apply(e,a);function c(e){asyncGeneratorStep(r,t,n,c,o,"next",e)}function o(e){asyncGeneratorStep(r,t,n,c,o,"throw",e)}c(void 0)})}}var cardsContainers=document.querySelectorAll(".deck"),allCheckbox=document.querySelectorAll(".select-checkbox"),inputsNumber=document.querySelectorAll(".number-of-cards"),selects=document.querySelectorAll(".select"),options=document.querySelectorAll(".option"),addButtons=document.querySelectorAll(".add-button"),startGameButton=document.querySelector(".start-game"),decksDiscarded=document.querySelectorAll(".deckDiscarded"),animationRunning=!1,gameFinished=!1;function getSpace(e){var t=e.indexOf("-")+1,n=e.indexOf(")");return parseInt(e.slice(t,n))}function getRandomIntInclusive(e,t){return e=Math.ceil(e),t=Math.floor(t),Math.floor(Math.random()*(t-e+1))+e}function ordenDeck(e){for(var t=e.querySelectorAll(".card"),n=5,r=0;r<t.length;r++)t[r].style.transform="translate(0px, -".concat(n,"px) rotateX(-70deg) rotateY(0deg) rotateZ(10deg)"),t[r].style.zIndex=r,n+=5}function ordenDecks(){for(var e=0;e<cardsContainers.length;e++)for(var t=cardsContainers[e].querySelectorAll(".card"),n=5,r=0;r<t.length;r++)t[r].style.transform="translate(0px, -".concat(n,"px) rotateX(-70deg) rotateY(180deg) rotateZ(-10deg)"),(t[r].style.zIndex=r)%2==0&&(n+=5)}function ordenDeckDiscarded(e){var t,n,r,c,o=e.querySelectorAll(".card");0<=e.childElementCount-2?(n=(t=o[e.childElementCount-2]).style.zIndex,r=getSpace(t.style.transform),r=e.childElementCount%2==0?r+5:r,o[c=e.childElementCount-1].style.transition="none",o[c].style.top="0",o[c].style.zIndex="".concat(parseInt(n)+1),o[c].style.transform="translate(0px, -".concat(r,"px) rotateX(-70deg) rotateY(0deg) rotateZ(10deg)")):(o[0].style.transition="none",o[0].style.top="0",o[0].style.zIndex="0",o[0].style.transform="translate(0px, -5px) rotateX(-70deg) rotateY(0deg) rotateZ(10deg)")}function checkConfigCard(e){var t=e.querySelector(".actions .confirm"),n=e.querySelector(".number-of-cards").value,r=e.querySelector(".suit").textContent,c=e.querySelector(".card-in-suit").textContent;""!=n&&"Suit"!=r&&"Card in suit"!=c?t.classList.add("active"):t.classList.remove("active")}function checkStatusConfig(){var e=document.querySelector(".deck1"),t=document.querySelector(".deck2"),n=document.querySelector(".deck3");1==e.childElementCount||1==t.childElementCount||1==n.childElementCount?startGameButton.classList.remove("active"):startGameButton.classList.add("active")}function resetConfigCard(e){e.querySelector(".number-of-cards").value="1",e.querySelector(".suit").textContent="Suit",e.querySelector(".card-in-suit").textContent="Card in suit"}function addCardsInDeck(e,t){for(var n=t.numberCards,r=t.suit,c=t.cardInSuit,o=isNaN(parseInt(c))?c[0]:c,a=0;a<n;a++){var l=document.createElement("div");l.setAttribute("class","card"),l.innerHTML='\n\t\t\t\t<div class="front">\n\t\t\t\t\t<img src="./img/cards/'.concat(o).concat(r[0],'.png">\n\t\t\t\t</div>\n\t\t\t\t<div class="reverse"></div>\n\t\t'),e.appendChild(l)}}function uploadConfigurationFile(e){for(var t=e.replace(/ /g,""),n=(n=(t=(t=t.replace(/\r?\n|\r/g," ")).toUpperCase()).split("DECK")).filter(function(e){return e}),r=0;r<n.length;r++)if(n[r]=n[r].trim(),""!=n[r])for(var c=n[r].split(" "),o=0;o<c.length;o++){var a=c[o].split(","),l=3==a.length?a[0]:1,i=3==a.length?a[1]:a[0],s=3==a.length?a[2]:a[1];addCardsInDeck(document.querySelector(".deck".concat(r+1)),{numberCards:l,suit:s,cardInSuit:i})}document.querySelector(".settings-view").style.display="none",document.querySelector(".home").style.display="none",document.querySelector(".game-area").style.display="grid",startGameButton.classList.add("active"),startGameButton.click()}function playDefaultGame(){return _playDefaultGame.apply(this,arguments)}function _playDefaultGame(){return(_playDefaultGame=_asyncToGenerator(regeneratorRuntime.mark(function e(){var t;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,fetch("./configuration.txt");case 2:return t=e.sent,e.next=5,t.text();case 5:uploadConfigurationFile(e.sent);case 7:case"end":return e.stop()}},e)}))).apply(this,arguments)}document.querySelector(".button.play").addEventListener("click",function(){playDefaultGame()}),document.querySelector(".button.settings").addEventListener("click",function(){document.querySelector(".home").style.display="none",document.querySelector(".settings-view").style.display="flex"}),document.querySelector(".button.graphics").addEventListener("click",function(){document.querySelector(".settings-view").style.display="none",document.querySelector(".config").style.display="grid",document.querySelector(".game-area").style.display="grid"}),document.querySelector(".button.file").addEventListener("click",function(){var r=document.querySelector("#fileConfiguration");r.click(),r.addEventListener("change",function(e){var t=r.files[0],n=new FileReader;n.onload=function(e){uploadConfigurationFile(e.target.result)},n.readAsText(t)})}),addButtons.forEach(function(o){o.addEventListener("click",function(){o.style.display="none";var r=o.parentNode.querySelector(".config-checkbox");r.checked=!0,o.parentNode.querySelector(".actions .cancel").addEventListener("click",function(){o.style.display="block",r.checked=!1,resetConfigCard(o.parentNode)});var c=o.parentNode.querySelector(".actions .confirm");c.addEventListener("click",function(){var e,t,n;c.classList.contains("active")&&(e=o.parentNode.classList[1].slice(-1),addCardsInDeck(t=document.querySelector(".deck".concat(e)),{numberCards:(n=c.parentNode.parentNode).querySelector(".number-of-cards").value,suit:n.querySelector(".suit").textContent,cardInSuit:n.querySelector(".card-in-suit").textContent}),ordenDeck(t),checkStatusConfig(),o.style.display="block",r.checked=!1,resetConfigCard(o.parentNode),c.classList.remove("active"))})})}),selects.forEach(function(t){t.addEventListener("click",function(e){allCheckbox.forEach(function(e){t.contains(e)?e.checked=!e.checked:e.checked=!1})})}),options.forEach(function(n){n.addEventListener("click",function(e){var t=e.target.textContent;e.target.parentNode.parentNode.parentNode.querySelector(".title").textContent=t,checkConfigCard(n.parentNode.parentNode.parentNode.parentNode)})}),inputsNumber.forEach(function(n){n.addEventListener("keyup",function(e){var t=e.target.value;e.target.value=Math.round(parseFloat(t)),52<e.target.value&&(e.target.value=52),checkConfigCard(n.parentNode)})}),startGameButton.addEventListener("click",function(){startGameButton.classList.contains("active")&&(document.querySelector(".game-area").classList.remove("mode-config"),ordenDecks(),document.querySelector(".config").style.display="none",document.body.style.fontSize="13px",window.scrollTo(0,document.querySelectorAll(".deck")[0].offsetTop/2))}),cardsContainers.forEach(function(d){d.addEventListener("click",function(e){var t,n,r,c,o,a,l,i,s;!animationRunning&&1<d.childElementCount&&!e.target.classList.contains("select-button")&&!gameFinished?(animationRunning=!0,n=getRandomIntInclusive(0,t=d.querySelectorAll(".card").length-1),r=d.querySelectorAll(".card")[n],o=(c=d.querySelectorAll(".card")[t]).innerHTML,a=r.innerHTML,r.innerHTML=o,c.innerHTML=a,l=d.classList[1].slice(-1),i=document.querySelector(".deckDiscarded".concat(l)),c.style.zIndex="100",(s=0)<i.childElementCount&&(s=getSpace(i.querySelectorAll(".card")[i.childElementCount-1].style.transform)),c.style.transition="all 0.6s ease",c.style.transform="rotateX(0deg) rotateY(0deg) rotateZ(0deg)",c.style.top="calc(-100% - ".concat(s,"px)"),setTimeout(function(){c.style.transform="rotateX(-70deg) rotateY(0deg) rotateZ(10deg)",setTimeout(function(){i.appendChild(c),ordenDeckDiscarded(i),animationRunning=!1},600)},800)):e.target.classList.contains("select-button")&&(0==document.querySelectorAll(".select-button.selected").length?(e.target.textContent="Selected",e.target.classList.add("selected"),gameFinished=!0):e.target.classList.contains("selected")&&(e.target.textContent="Select",e.target.classList.remove("selected"),gameFinished=!1))})});